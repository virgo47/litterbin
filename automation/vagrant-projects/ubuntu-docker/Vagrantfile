1# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-22.04"
  config.vm.hostname = "ubuntu-docker"
  config.vm.network "private_network", ip: "192.168.56.201"

  # Low-level partition size is 62G, but / is just 31G, to check it:
  # lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL
  # To resize it:
  # lvresize -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
  # resize2fs /dev/ubuntu-vg/ubuntu-lv

  config.vm.provider "virtualbox" do |vb|
    #vb.gui = true
    vb.name = "ubuntu-docker"
    # better to have more RAM than default 1GB (e.g. Java builds, etc.)
    vb.memory = 16384
    vb.cpus = 8
  end
  
  config.vm.provision "shell", inline: <<-SHELL
    # based on: https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-using-the-repository

    # suppresses some warnings about stdin/out, see also https://serverfault.com/a/670688/302310
    export DEBIAN_FRONTEND=noninteractive
    # other warnings are still there though (preconfigure, apt-key...)

    sudo apt-get update
    sudo apt-get install -y apt-transport-https \
      ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository \
      "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) \
      stable"
    sudo apt-get update
    sudo apt-get install -y docker-ce

    # user vagrant can use docker command
    sudo usermod -aG docker vagrant
  SHELL
end
